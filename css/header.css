@font-face {
  font-family: "Pixel-Art";
  src: url("../fonte/fonte.ttf") format("truetype");
  font-weight: normal;
  font-style: normal;
}

* {
  box-sizing: border-box;
  margin: 0;
  list-style: none;
  text-decoration: none;
}

body {
  height: 100vh;
  display: grid;
  background-color: #b4aeca;
  place-content: center;
  background-image: url(../img/fundo-pixel.png);
  background-size: cover;
  background-repeat: no-repeat;
  background-position: start;
  /* Usei o display grid para alinhar o site ao centro logo no body */
}

.container {
  width: 1500px;
  height: 750px;
  display: flex;
  justify-content: center;
  align-items: center;
  /* aqui eu criei 2 "colunas" no site em formato de linha
  O lado esquerdo (menu) e o direito (livro) */
}

.lado-esquerdo {
  width: 30%; /* limitando a largura a 30% */
  height: 100%; /* e a altura quero o site todo */
  padding: 10px;
}

.lado-direito {
  width: 65%; /* Define o resto do site ao lado direito*/
  height: 100%; /*  queremos altura 100% */
  padding: 10px;
}

.lado-esquerdo .box {
  width: 100%;
  height: 40%; /* como o height do pai é 100%, queremos colocar apenas 40% para esse filho */
}

.lado-direito,
.livro,
.paragrafos {
  display: flex;
  justify-content: center;
  align-items: center;
  /* adicionando flex e centralizando o 
  conteudo que eu preicso */
}

.box.person {
  /* adicionando o background a div */
  /* como não tem conteudo, nao ocupa linhas */
  background-image: url(../img/borda-menu.png);
  background-position: center;
  background-size: contain;
  background-repeat: no-repeat;
  display: flex;
  justify-content: center;
}

.person .minha-foto {
  width: 30%;
  height: 30%;
  margin: 10px;
  align-self: flex-start;
margin-top: 40px;
  /* definindo a altura e largura da foto com base na div */
}
.minha-foto img {
  width: 100%;
  align-self: center;
  /* A minha foto vira 100% do objeto pai */
}

.person .descricao {
  color: #f2f2f2;
  /* max-width: 140px; */
  max-width: 20ch; /* Aqui podemos usar CH ou Pixel*/
  overflow-wrap: break-word;
  margin: 5px;
  font-family: "rajdhani";
  position: relative;
  margin-top: 30px;
}

.titulo {
  font-size: 1.7rem;
  font-weight: bold;
}

.sobre {
  font-size: 15px;
  margin-top: 10px;
}

/* Caixanihas de HTML, CSS E JS */

.menu {
  /* Aqui estou colocando position relative da div que a caixinha vai tirar como base. */
  position: relative;
  width: 100%;
  /* Width de 100% para existir alguma coisa ali e ter como ter uma base  */
}

.caixinha {
  display: flex;
  height: 60px;
  margin-top: 40px;
  gap: 5px;
}
.caixinha img {
  height: 100%;
  /* aqui ele está 100% do container pai que é 60px */
}

/* Botões de Linkedin, GitHub e Projetos */

ul {
  /* O UL sendo flex vai jogar os itens ao centro do quadrado. */
  display: flex;
  flex-direction: column;
  width: 100%;
  height: 200px;
  gap: 20px;
  padding: 0px;
  align-items: center;
  justify-content: center;
}

.linkedin,
.projetos,
.github,
.certificados,
li a {
  /* Usando o align-itens vai alinhar o texto aos icones */
  display: flex;
  font-family: "rajdhani";
  color: #3a181a;
  font-weight: bold;
  font-size: 1.3rem;
  gap: 10px;
  align-items: center;
  text-shadow: 2px 2px 10px #0000002d;
}

.i-link img {
  max-width: 35px;
}
.i-link:hover {
  animation: pulsate 1s ease-in-out;
}

@keyframes pulsate {
  50% {
    text-shadow: 0 0 6px #865355, 0px 0 12px #35191b;
  }
}

.organizar {
  /* .organizar foi feito meramente para alinhar os icones e links ao centro usando o baseline */
  display: flex;
  flex-direction: column;
  align-items: baseline;
  gap: 20px;
}

.sublinhado {
  text-decoration: underline 3px;
}
